{
  "version": 4,
  "terraform_version": "1.12.1",
  "serial": 33,
  "lineage": "172a5b3c-19de-a53a-b3da-ece8f060714d",
  "outputs": {
    "permutacoes_api_url_get": {
      "value": "https://hug7i1twr1.execute-api.us-east-1.amazonaws.com/prod/palavra/{palavra}",
      "type": "string"
    },
    "permutacoes_api_url_post": {
      "value": "https://hug7i1twr1.execute-api.us-east-1.amazonaws.com/prod/palavra",
      "type": "string"
    },
    "s3_bucket_name": {
      "value": "permutacoes-palavras-bucket",
      "type": "string"
    },
    "sqs_queue_url": {
      "value": "http://sqs.us-east-1.localstack:4566/000000000000/palavras-validas-queue",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "archive_file",
      "name": "lambda_processadora_zip",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "exclude_symlink_directories": null,
            "excludes": null,
            "id": "5acdf1e2785d69d5089567ca44e2c323bcd64043",
            "output_base64sha256": "XFPU6uCyiiXGSKZt8OtH9iPCmwIa3kmBeNtNaNja9lo=",
            "output_base64sha512": "L7PW5RkYalqndCY0YABj5yyXzsVMK1I2F75piZTWQz6FyZijzCossNwfGuHaxi+55DhhVp8pzEr60a7ycVAbDA==",
            "output_file_mode": null,
            "output_md5": "1f3fcee11026a6412ab8e7c1ce077ffd",
            "output_path": "lambda_processadora.zip",
            "output_sha": "5acdf1e2785d69d5089567ca44e2c323bcd64043",
            "output_sha256": "5c53d4eae0b28a25c648a66df0eb47f623c29b021ade498178db4d68d8daf65a",
            "output_sha512": "2fb3d6e519186a5aa7742634600063e72c97cec54c2b523617be698994d6433e85c998a3cc2a2cb0dc1f1ae1dac62fb9e43861569f29cc4afad1aef271501b0c",
            "output_size": 1477,
            "source": [
              {
                "content": "import json\nimport boto3\nimport logging\nfrom itertools import permutations\nfrom datetime import datetime\nfrom botocore.exceptions import ClientError\n\n# Configuração de logging\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\n# Clientes AWS - configurados para LocalStack\n# Para Lambda rodando no LocalStack, não precisa especificar endpoint\ns3_client = boto3.client(\n    's3',\n    region_name='us-east-1'\n)\n\n# Configurações\nS3_BUCKET_NAME = 'permutacoes-palavras-bucket'\n\ndef lambda_handler(event, context):\n    \"\"\"\n    Lambda Processadora: Consome SQS, gera permutações e salva no S3\n    \"\"\"\n    try:\n        # Processa todas as mensagens do SQS\n        for record in event['Records']:\n            processar_mensagem(record)\n        \n        return {\n            'statusCode': 200,\n            'body': json.dumps({'message': 'Mensagens processadas com sucesso'})\n        }\n        \n    except Exception as e:\n        logger.error(f'Erro na Lambda Processadora: {str(e)}')\n        raise\n\ndef processar_mensagem(record):\n    \"\"\"\n    Processa uma mensagem individual do SQS\n    \"\"\"\n    try:\n        # Extrai dados da mensagem\n        message_body = json.loads(record['body'])\n        palavra = message_body.get('palavra', '').strip().lower()\n        \n        if not palavra:\n            logger.warning('Mensagem SQS sem palavra válida')\n            return\n        \n        logger.info(f'Processando palavra: {palavra}')\n        \n        # Gera todas as permutações da palavra\n        lista_permutacoes = gerar_permutacoes(palavra)\n        \n        # Salva permutações no S3\n        salvar_no_s3(palavra, lista_permutacoes)\n        \n        logger.info(f'Permutações geradas e salvas para palavra: {palavra}')\n        \n    except json.JSONDecodeError:\n        logger.error('Erro ao decodificar JSON da mensagem SQS')\n    except Exception as e:\n        logger.error(f'Erro ao processar mensagem: {str(e)}')\n        raise\n\ndef gerar_permutacoes(palavra):\n    \"\"\"\n    Gera todas as permutações possíveis da palavra\n    \"\"\"\n    try:\n        # Converte palavra em lista de caracteres\n        caracteres = list(palavra)\n        \n        # Gera todas as permutações\n        perms = list(permutations(caracteres))\n        \n        # Converte permutações em strings e remove duplicatas\n        lista_permutacoes = list(set([''.join(p) for p in perms]))\n        \n        # Ordena alfabeticamente\n        lista_permutacoes.sort()\n        \n        logger.info(f'Geradas {len(lista_permutacoes)} permutações para palavra: {palavra}')\n        \n        return lista_permutacoes\n        \n    except Exception as e:\n        logger.error(f'Erro ao gerar permutações: {str(e)}')\n        raise\n\ndef salvar_no_s3(palavra, permutacoes):\n    \"\"\"\n    Salva permutações no S3 em formato JSON\n    \"\"\"\n    try:\n        # Prepara dados para salvar\n        data = {\n            'palavra_original': palavra,\n            'total_permutacoes': len(permutacoes),\n            'permutacoes': permutacoes,\n            'processado_em': datetime.now().isoformat(),\n            'metadata': {\n                'tamanho_palavra': len(palavra),\n                'caracteres_unicos': len(set(palavra)),\n                'primeira_permutacao': permutacoes[0] if permutacoes else None,\n                'ultima_permutacao': permutacoes[-1] if permutacoes else None\n            }\n        }\n        \n        # Define chave do objeto S3\n        s3_key = f'permutacoes/{palavra}.json'\n        \n        # Salva no S3\n        s3_client.put_object(\n            Bucket=S3_BUCKET_NAME,\n            Key=s3_key,\n            Body=json.dumps(data, ensure_ascii=False, indent=2),\n            ContentType='application/json'\n        )\n        \n        logger.info(f'Permutações salvas no S3: {s3_key}')\n        \n    except ClientError as e:\n        logger.error(f'Erro ao salvar no S3: {str(e)}')\n        raise\n    except Exception as e:\n        logger.error(f'Erro ao preparar dados para S3: {str(e)}')\n        raise\n",
                "filename": "lambda_processadora.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "archive_file",
      "name": "lambda_validadora_zip",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "exclude_symlink_directories": null,
            "excludes": null,
            "id": "74a5a3b1d88ec9b75ea3dd63e003ebc9253c6c7a",
            "output_base64sha256": "o0bjtxvukTtX9kshzCfTdTecA56lggkHhIsDnJUfQTs=",
            "output_base64sha512": "5xSBL994cj83Bo6m+MeISduicMeNjon8Tm7/4pJ+vWwFP8fm+6QMGjDcp/If5HSfl/qwY3+ozKZWa9cqS+stew==",
            "output_file_mode": null,
            "output_md5": "1f201a1580eb8a1670293eebd934680d",
            "output_path": "lambda_validadora.zip",
            "output_sha": "74a5a3b1d88ec9b75ea3dd63e003ebc9253c6c7a",
            "output_sha256": "a346e3b71bee913b57f64b21cc27d375379c039ea5820907848b039c951f413b",
            "output_sha512": "e714812fdf78723f37068ea6f8c78849dba270c78d8e89fc4e6effe2927ebd6c053fc7e6fba40c1a30dca7f21fe4749f97fab0637fa8cca6566bd72a4beb2d7b",
            "output_size": 1795,
            "source": [
              {
                "content": "import json\nimport boto3\nimport logging\nfrom datetime import datetime\nfrom botocore.exceptions import ClientError\n\n# Configuração de logging\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\n# Clientes AWS - configurados para LocalStack\n# Para Lambda rodando no LocalStack, não precisa especificar endpoint\nsqs_client = boto3.client(\n    'sqs',\n    region_name='us-east-1'\n)\ns3_client = boto3.client(\n    's3',\n    region_name='us-east-1'\n)\n\n# Configurações\nSQS_QUEUE_URL = 'http://localhost:4566/000000000000/palavras-validas-queue'\nS3_BUCKET_NAME = 'permutacoes-palavras-bucket'\n\ndef lambda_handler(event, context):\n    \"\"\"\n    Lambda Validadora: Recebe palavra, valida e envia para SQS ou consulta S3\n    \"\"\"\n    try:\n        # Determina se é POST ou GET\n        http_method = event.get('httpMethod', '')\n        \n        if http_method == 'POST':\n            return processar_post(event)\n        elif http_method == 'GET':\n            return processar_get(event)\n        else:\n            return criar_resposta(400, {'error': 'Método HTTP não suportado'})\n            \n    except Exception as e:\n        logger.error(f'Erro na Lambda Validadora: {str(e)}')\n        return criar_resposta(500, {'error': 'Erro interno do servidor'})\n\ndef processar_post(event):\n    \"\"\"\n    Processa requisição POST - recebe palavra e valida\n    \"\"\"\n    try:\n        # Extrai palavra do corpo da requisição\n        body = json.loads(event.get('body', '{}'))\n        palavra = body.get('palavra', '').strip().lower()\n        \n        if not palavra:\n            return criar_resposta(400, {'error': 'Palavra não fornecida'})\n        \n        # Valida se tem exatamente 4 letras\n        if len(palavra) != 4 or not palavra.isalpha():\n            return criar_resposta(400, {\n                'error': 'Palavra deve ter exatamente 4 letras',\n                'palavra_recebida': palavra,\n                'tamanho': len(palavra)\n            })\n        \n        # Envia palavra para SQS\n        enviar_para_sqs(palavra)\n        \n        logger.info(f'Palavra válida enviada para SQS: {palavra}')\n        \n        return criar_resposta(200, {\n            'message': 'Palavra válida recebida e enviada para processamento',\n            'palavra': palavra,\n            'status': 'processando'\n        })\n        \n    except json.JSONDecodeError:\n        return criar_resposta(400, {'error': 'JSON inválido'})\n    except Exception as e:\n        logger.error(f'Erro ao processar POST: {str(e)}')\n        return criar_resposta(500, {'error': 'Erro ao processar palavra'})\n\ndef processar_get(event):\n    \"\"\"\n    Processa requisição GET - consulta permutações no S3\n    \"\"\"\n    try:\n        # Extrai palavra do path parameter\n        palavra = event.get('pathParameters', {}).get('palavra', '').strip().lower()\n        \n        if not palavra:\n            return criar_resposta(400, {'error': 'Palavra não fornecida no path'})\n        \n        # Consulta permutações no S3\n        permutacoes = consultar_s3(palavra)\n        \n        if permutacoes:\n            return criar_resposta(200, {\n                'palavra': palavra,\n                'permutacoes': permutacoes,\n                'total': len(permutacoes)\n            })\n        else:\n            return criar_resposta(404, {\n                'error': 'Permutações não encontradas',\n                'palavra': palavra,\n                'message': 'Palavra ainda não foi processada ou não existe'\n            })\n            \n    except Exception as e:\n        logger.error(f'Erro ao processar GET: {str(e)}')\n        return criar_resposta(500, {'error': 'Erro ao consultar permutações'})\n\ndef enviar_para_sqs(palavra):\n    \"\"\"\n    Envia palavra válida para a fila SQS\n    \"\"\"\n    try:\n        message_body = json.dumps({\n            'palavra': palavra,\n            'timestamp': str(datetime.now())\n        })\n        \n        response = sqs_client.send_message(\n            QueueUrl=SQS_QUEUE_URL,\n            MessageBody=message_body\n        )\n        \n        logger.info(f'Mensagem enviada para SQS: {response.get(\"MessageId\")}')\n        \n    except ClientError as e:\n        logger.error(f'Erro ao enviar para SQS: {str(e)}')\n        raise\n\ndef consultar_s3(palavra):\n    \"\"\"\n    Consulta permutações da palavra no S3\n    \"\"\"\n    try:\n        s3_key = f'permutacoes/{palavra}.json'\n        \n        response = s3_client.get_object(\n            Bucket=S3_BUCKET_NAME,\n            Key=s3_key\n        )\n        \n        content = response['Body'].read().decode('utf-8')\n        data = json.loads(content)\n        \n        return data.get('permutacoes', [])\n        \n    except ClientError as e:\n        if e.response['Error']['Code'] == 'NoSuchKey':\n            logger.info(f'Permutações não encontradas para palavra: {palavra}')\n            return None\n        else:\n            logger.error(f'Erro ao consultar S3: {str(e)}')\n            raise\n    except Exception as e:\n        logger.error(f'Erro ao processar resposta do S3: {str(e)}')\n        raise\n\ndef criar_resposta(status_code, body):\n    \"\"\"\n    Cria resposta HTTP padronizada\n    \"\"\"\n    return {\n        'statusCode': status_code,\n        'headers': {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type'\n        },\n        'body': json.dumps(body, ensure_ascii=False)\n    }\n",
                "filename": "lambda_validadora.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_deployment",
      "name": "permutacoes_deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "canary_settings": [],
            "created_date": "2025-07-12T14:01:29Z",
            "description": "",
            "execution_arn": "arn:aws:execute-api:us-east-1::hug7i1twr1/",
            "id": "lnmffoqwiz",
            "invoke_url": "https://hug7i1twr1.execute-api.us-east-1.amazonaws.com/",
            "rest_api_id": "hug7i1twr1",
            "stage_description": null,
            "stage_name": null,
            "triggers": {
              "redeployment": "3a75cb4a305920004eab965939369480381504b6"
            },
            "variables": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_integration.get_integration",
            "aws_api_gateway_integration.post_integration",
            "aws_api_gateway_method.get_palavra",
            "aws_api_gateway_method.post_palavra",
            "aws_api_gateway_resource.palavra_param_resource",
            "aws_api_gateway_resource.palavra_resource",
            "aws_api_gateway_rest_api.permutacoes_api",
            "aws_iam_role.lambda_validadora_role",
            "aws_lambda_function.lambda_validadora",
            "data.archive_file.lambda_validadora_zip"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "get_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "l3sym6ng8o",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "GET",
            "id": "agi-hug7i1twr1-l3sym6ng8o-GET",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "l3sym6ng8o",
            "rest_api_id": "hug7i1twr1",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:palavras-validadora/invocations"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_method.get_palavra",
            "aws_api_gateway_resource.palavra_param_resource",
            "aws_api_gateway_resource.palavra_resource",
            "aws_api_gateway_rest_api.permutacoes_api",
            "aws_iam_role.lambda_validadora_role",
            "aws_lambda_function.lambda_validadora",
            "data.archive_file.lambda_validadora_zip"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "post_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "mscbap0q8y",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "POST",
            "id": "agi-hug7i1twr1-mscbap0q8y-POST",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "mscbap0q8y",
            "rest_api_id": "hug7i1twr1",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:palavras-validadora/invocations"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_method.post_palavra",
            "aws_api_gateway_resource.palavra_resource",
            "aws_api_gateway_rest_api.permutacoes_api",
            "aws_iam_role.lambda_validadora_role",
            "aws_lambda_function.lambda_validadora",
            "data.archive_file.lambda_validadora_zip"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "get_palavra",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "GET",
            "id": "agm-hug7i1twr1-l3sym6ng8o-GET",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "l3sym6ng8o",
            "rest_api_id": "hug7i1twr1"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_resource.palavra_param_resource",
            "aws_api_gateway_resource.palavra_resource",
            "aws_api_gateway_rest_api.permutacoes_api"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "post_palavra",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "POST",
            "id": "agm-hug7i1twr1-mscbap0q8y-POST",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "mscbap0q8y",
            "rest_api_id": "hug7i1twr1"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_resource.palavra_resource",
            "aws_api_gateway_rest_api.permutacoes_api"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "palavra_param_resource",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "l3sym6ng8o",
            "parent_id": "mscbap0q8y",
            "path": "/palavra/{palavra}",
            "path_part": "{palavra}",
            "rest_api_id": "hug7i1twr1"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_resource.palavra_resource",
            "aws_api_gateway_rest_api.permutacoes_api"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "palavra_resource",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mscbap0q8y",
            "parent_id": "32cqplahz0",
            "path": "/palavra",
            "path_part": "palavra",
            "rest_api_id": "hug7i1twr1"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.permutacoes_api"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_rest_api",
      "name": "permutacoes_api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_source": "HEADER",
            "arn": "arn:aws:apigateway:us-east-1::/restapis/hug7i1twr1",
            "binary_media_types": [],
            "body": null,
            "created_date": "2025-07-12T14:01:24Z",
            "description": "API para processamento de permutações de palavras",
            "disable_execute_api_endpoint": false,
            "endpoint_configuration": [
              {
                "ip_address_type": "",
                "types": [
                  "REGIONAL"
                ],
                "vpc_endpoint_ids": []
              }
            ],
            "execution_arn": "arn:aws:execute-api:us-east-1::hug7i1twr1",
            "fail_on_warnings": null,
            "id": "hug7i1twr1",
            "minimum_compression_size": "",
            "name": "permutacoes-api",
            "parameters": null,
            "policy": "",
            "put_rest_api_mode": null,
            "root_resource_id": "32cqplahz0",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_stage",
      "name": "permutacoes_stage",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_log_settings": [],
            "arn": "arn:aws:apigateway:us-east-1::/restapis/hug7i1twr1/stages/prod",
            "cache_cluster_enabled": false,
            "cache_cluster_size": "",
            "canary_settings": [],
            "client_certificate_id": "",
            "deployment_id": "lnmffoqwiz",
            "description": "Stage de produção para API de permutações",
            "documentation_version": "",
            "execution_arn": "arn:aws:execute-api:us-east-1::hug7i1twr1/prod",
            "id": "ags-hug7i1twr1-prod",
            "invoke_url": "https://hug7i1twr1.execute-api.us-east-1.amazonaws.com/prod",
            "rest_api_id": "hug7i1twr1",
            "stage_name": "prod",
            "tags": {
              "Environment": "production",
              "Name": "permutacoes-prod-stage"
            },
            "tags_all": {
              "Environment": "production",
              "Name": "permutacoes-prod-stage"
            },
            "variables": {},
            "web_acl_arn": "",
            "xray_tracing_enabled": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_deployment.permutacoes_deployment",
            "aws_api_gateway_integration.get_integration",
            "aws_api_gateway_integration.post_integration",
            "aws_api_gateway_method.get_palavra",
            "aws_api_gateway_method.post_palavra",
            "aws_api_gateway_resource.palavra_param_resource",
            "aws_api_gateway_resource.palavra_resource",
            "aws_api_gateway_rest_api.permutacoes_api",
            "aws_iam_role.lambda_validadora_role",
            "aws_lambda_function.lambda_validadora",
            "data.archive_file.lambda_validadora_zip"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda_processadora_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:role/lambda-processadora-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-07-12T14:01:24Z",
            "description": "",
            "force_detach_policies": false,
            "id": "lambda-processadora-role",
            "inline_policy": [
              {
                "name": "lambda-processadora-policy",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sqs:ReceiveMessage\",\"sqs:DeleteMessage\",\"sqs:GetQueueAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sqs:us-east-1:000000000000:palavras-validas-queue\"},{\"Action\":[\"s3:PutObject\",\"s3:GetObject\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:s3:::permutacoes-palavras-bucket/*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ],
            "max_session_duration": 3600,
            "name": "lambda-processadora-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAQAAAAAAALXDDLSY3C"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda_validadora_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::000000000000:role/lambda-validadora-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-07-12T14:01:24Z",
            "description": "",
            "force_detach_policies": false,
            "id": "lambda-validadora-role",
            "inline_policy": [
              {
                "name": "lambda-validadora-policy",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sqs:SendMessage\",\"sqs:GetQueueAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sqs:us-east-1:000000000000:palavras-validas-queue\"},{\"Action\":[\"s3:GetObject\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:s3:::permutacoes-palavras-bucket/*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ],
            "max_session_duration": 3600,
            "name": "lambda-validadora-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAQAAAAAAAFV46BWD5F"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "lambda_processadora_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "lambda-processadora-role:lambda-processadora-policy",
            "name": "lambda-processadora-policy",
            "name_prefix": "",
            "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sqs:ReceiveMessage\",\"sqs:DeleteMessage\",\"sqs:GetQueueAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sqs:us-east-1:000000000000:palavras-validas-queue\"},{\"Action\":[\"s3:PutObject\",\"s3:GetObject\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:s3:::permutacoes-palavras-bucket/*\"}]}",
            "role": "lambda-processadora-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.lambda_processadora_role",
            "aws_s3_bucket.permutacoes_bucket",
            "aws_sqs_queue.palavras_validas_queue"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "lambda_validadora_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "lambda-validadora-role:lambda-validadora-policy",
            "name": "lambda-validadora-policy",
            "name_prefix": "",
            "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sqs:SendMessage\",\"sqs:GetQueueAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sqs:us-east-1:000000000000:palavras-validas-queue\"},{\"Action\":[\"s3:GetObject\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:s3:::permutacoes-palavras-bucket/*\"}]}",
            "role": "lambda-validadora-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.lambda_validadora_role",
            "aws_s3_bucket.permutacoes_bucket",
            "aws_sqs_queue.palavras_validas_queue"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_processadora_basic",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "lambda-processadora-role-20250712140124154000000002",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "role": "lambda-processadora-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.lambda_processadora_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_validadora_basic",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "lambda-validadora-role-20250712140124154000000001",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "role": "lambda-validadora-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.lambda_validadora_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_event_source_mapping",
      "name": "sqs_trigger",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "amazon_managed_kafka_event_source_config": [],
            "arn": "arn:aws:lambda:us-east-1:000000000000:event-source-mapping:ece6d840-1f6d-4a2f-9232-89012e3ee955",
            "batch_size": 10,
            "bisect_batch_on_function_error": false,
            "destination_config": [],
            "document_db_event_source_config": [],
            "enabled": true,
            "event_source_arn": "arn:aws:sqs:us-east-1:000000000000:palavras-validas-queue",
            "filter_criteria": [],
            "function_arn": "arn:aws:lambda:us-east-1:000000000000:function:palavras-processadora",
            "function_name": "arn:aws:lambda:us-east-1:000000000000:function:palavras-processadora",
            "function_response_types": [],
            "id": "ece6d840-1f6d-4a2f-9232-89012e3ee955",
            "kms_key_arn": "",
            "last_modified": "2025-07-12T14:01:49Z",
            "last_processing_result": "",
            "maximum_batching_window_in_seconds": 0,
            "maximum_record_age_in_seconds": 0,
            "maximum_retry_attempts": 0,
            "metrics_config": [],
            "parallelization_factor": 0,
            "provisioned_poller_config": [],
            "queues": [],
            "scaling_config": [],
            "self_managed_event_source": [],
            "self_managed_kafka_event_source_config": [],
            "source_access_configuration": [],
            "starting_position": "",
            "starting_position_timestamp": "",
            "state": "Enabled",
            "state_transition_reason": "USER_INITIATED",
            "tags": {},
            "tags_all": {},
            "topics": [],
            "tumbling_window_in_seconds": 0,
            "uuid": "ece6d840-1f6d-4a2f-9232-89012e3ee955"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.lambda_processadora_role",
            "aws_lambda_function.lambda_processadora",
            "aws_sqs_queue.palavras_validas_queue",
            "data.archive_file.lambda_processadora_zip"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda_processadora",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:000000000000:function:palavras-processadora",
            "code_sha256": "XFPU6uCyiiXGSKZt8OtH9iPCmwIa3kmBeNtNaNja9lo=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "Lambda que processa permutações e salva no S3",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda_processadora.zip",
            "function_name": "palavras-processadora",
            "handler": "lambda_processadora.lambda_handler",
            "id": "palavras-processadora",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:palavras-processadora/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-07-12T14:13:16.586486+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/palavras-processadora",
                "system_log_level": ""
              }
            ],
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:000000000000:function:palavras-processadora:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:palavras-processadora:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::000000000000:role/lambda-processadora-role",
            "runtime": "python3.9",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "XFPU6uCyiiXGSKZt8OtH9iPCmwIa3kmBeNtNaNja9lo=",
            "source_code_size": 1477,
            "tags": {},
            "tags_all": {},
            "timeout": 60,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.lambda_processadora_role",
            "data.archive_file.lambda_processadora_zip"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda_validadora",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:000000000000:function:palavras-validadora",
            "code_sha256": "o0bjtxvukTtX9kshzCfTdTecA56lggkHhIsDnJUfQTs=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "Lambda que valida palavras e consulta permutações",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda_validadora.zip",
            "function_name": "palavras-validadora",
            "handler": "lambda_validadora.lambda_handler",
            "id": "palavras-validadora",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:palavras-validadora/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-07-12T14:13:11.563677+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/palavras-validadora",
                "system_log_level": ""
              }
            ],
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:000000000000:function:palavras-validadora:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:palavras-validadora:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::000000000000:role/lambda-validadora-role",
            "runtime": "python3.9",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "o0bjtxvukTtX9kshzCfTdTecA56lggkHhIsDnJUfQTs=",
            "source_code_size": 1795,
            "tags": {},
            "tags_all": {},
            "timeout": 30,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.lambda_validadora_role",
            "data.archive_file.lambda_validadora_zip"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "api_gateway_lambda_validadora",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "palavras-validadora",
            "function_url_auth_type": null,
            "id": "AllowExecutionFromAPIGateway",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1::hug7i1twr1/prod/*/*",
            "statement_id": "AllowExecutionFromAPIGateway",
            "statement_id_prefix": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_deployment.permutacoes_deployment",
            "aws_api_gateway_integration.get_integration",
            "aws_api_gateway_integration.post_integration",
            "aws_api_gateway_method.get_palavra",
            "aws_api_gateway_method.post_palavra",
            "aws_api_gateway_resource.palavra_param_resource",
            "aws_api_gateway_resource.palavra_resource",
            "aws_api_gateway_rest_api.permutacoes_api",
            "aws_api_gateway_stage.permutacoes_stage",
            "aws_iam_role.lambda_validadora_role",
            "aws_lambda_function.lambda_validadora",
            "data.archive_file.lambda_validadora_zip"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "permutacoes_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::permutacoes-palavras-bucket",
            "bucket": "permutacoes-palavras-bucket",
            "bucket_domain_name": "permutacoes-palavras-bucket.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "permutacoes-palavras-bucket.s3.us-east-1.amazonaws.com",
            "cors_rule": [],
            "force_destroy": true,
            "grant": [
              {
                "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z3AQBSTGFYJSTF",
            "id": "permutacoes-palavras-bucket",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "us-east-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "versioning": [
              {
                "enabled": true,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket_versioning",
      "name": "permutacoes_versioning",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "permutacoes-palavras-bucket",
            "expected_bucket_owner": "",
            "id": "permutacoes-palavras-bucket",
            "mfa": null,
            "versioning_configuration": [
              {
                "mfa_delete": "",
                "status": "Enabled"
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_s3_bucket.permutacoes_bucket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_sqs_queue",
      "name": "palavras_validas_queue",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"].permutacoes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sqs:us-east-1:000000000000:palavras-validas-queue",
            "content_based_deduplication": false,
            "deduplication_scope": "",
            "delay_seconds": 0,
            "fifo_queue": false,
            "fifo_throughput_limit": "",
            "id": "http://sqs.us-east-1.localstack:4566/000000000000/palavras-validas-queue",
            "kms_data_key_reuse_period_seconds": 300,
            "kms_master_key_id": "",
            "max_message_size": 2048,
            "message_retention_seconds": 1209600,
            "name": "palavras-validas-queue",
            "name_prefix": "",
            "policy": "",
            "receive_wait_time_seconds": 10,
            "redrive_allow_policy": "",
            "redrive_policy": "",
            "sqs_managed_sse_enabled": true,
            "tags": {
              "Environment": "development",
              "Name": "palavras-validas-queue"
            },
            "tags_all": {
              "Environment": "development",
              "Name": "palavras-validas-queue"
            },
            "timeouts": null,
            "url": "http://sqs.us-east-1.localstack:4566/000000000000/palavras-validas-queue",
            "visibility_timeout_seconds": 30
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwLCJ1cGRhdGUiOjE4MDAwMDAwMDAwMH19"
        }
      ]
    }
  ],
  "check_results": null
}
